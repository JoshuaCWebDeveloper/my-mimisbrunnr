name: Master Release

on:
  push:
    branches: [master]

jobs:
  get-base:
    runs-on: ubuntu-latest
    outputs:
      base: ${{ steps.get-tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Get latest tag
        id: get-tag
        run: echo "tag=$(git describe --tags --abbrev=0 2>/dev/null || git rev-list --max-parents=0 HEAD)" >> $GITHUB_OUTPUT

  ci:
    needs: get-base
    uses: ./.github/workflows/ci-checks.yml
    with:
      base: ${{ needs.get-base.outputs.base }}

  release:
    needs: ci
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create Chrome extension zip
        run: npx nx run mimisbrunnr-ext:zip

      - name: Create Firefox extension zip
        run: npx nx run mimisbrunnr-ext:zip:firefox

      - name: Get version from package.json
        id: package-version
        run: echo "version=$(node -p "require('./packages/mimisbrunnr-ext/package.json').version")" >> $GITHUB_OUTPUT

      - name: Create release tag
        id: create-tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "v${{ steps.package-version.outputs.version }}"
          git push origin "v${{ steps.package-version.outputs.version }}"

      - name: Create GitHub Release
        id: create-release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: v${{ steps.package-version.outputs.version }}
          name: Release v${{ steps.package-version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Chrome extension
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./packages/mimisbrunnr-ext/.output/mimisbrunnr-ext-chrome-mv3-production.zip
          asset_name: my-mimisbrunnr-chrome-mv3-v${{ steps.package-version.outputs.version }}.zip
          asset_content_type: application/zip

      - name: Upload Firefox extension
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./packages/mimisbrunnr-ext/.output/mimisbrunnr-ext-firefox-mv2-production.zip
          asset_name: my-mimisbrunnr-firefox-mv2-v${{ steps.package-version.outputs.version }}.zip
          asset_content_type: application/zip

      - name: Upload extension source
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./packages/mimisbrunnr-ext/.output/mimisbrunnr-source-production.zip
          asset_name: my-mimisbrunnr-source-v${{ steps.package-version.outputs.version }}.zip
          asset_content_type: application/zip
